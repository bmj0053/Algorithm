# 피보나치
# # f[1] = 1
# # f[2] = 1
# f[3] = [1]*1 + [2]*1 || (2+1) = 2
# f[4] = [1] + [2] + [2] = [1]*1 + [2]*2 || (2*2) = 3
# f[5] = [1] + [2] + [2] + [1] + [2] = [1]*2 + [2]*3 || 2*2+1 = 5
# f[6] = [1] + [2] * 2 + [1]*2 + [2]*3 = [1]*3 + [2]*5 || 2*3 = 8 = f[4]**2 - f[2]**2
# f[7] = [1]*3 + [2]*5 + [1]*2 + [2]*3 = [1]*5 + [2]*8 || 2*3+1 = 13 = f[4]**2 + f[3]**2
# f[8] = [1]*5 + [2]*8 + [1]*3 + [2]*5 = [1]*8 + [2]*13 || 2*4 = 21 = f[5]**2 - f[3]**2
# f[9] = [1]*8 + [2]*13 + [1]*5 + [2]*8 = [1]*13 + [2]*21 || 2*4+1 = 34 = f[5]**2 + f[4]**2
# f[10] = 55 = f[6]**2 - f[4]**2

# n == 2k : f[n] = f[k+1]**2 - f[k-1]**2
# n == 2k+1 : f[n] = f[k+1]**2 + f[k]**2

import sys
input = sys.stdin.readline

n = int(input())
f = dict()

def func(n):
    if f.get(n):
        return f[n]

    if n == 1 or n == 2:
        return 1
    if n%2:
        f[n//2+1] = func(n//2+1) % 1000000007
        f[n//2] = func(n//2) % 1000000007
        return f[n//2+1]**2 + f[n//2]**2
    else:
        f[n//2+1] = func(n//2+1) % 1000000007
        f[n//2-1] = func(n//2-1) % 1000000007
        return f[n//2+1]**2 - f[n//2-1]**2

print(func(n) % 1000000007)
